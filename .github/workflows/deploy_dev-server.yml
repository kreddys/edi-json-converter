# FILE: .github/workflows/deploy-dev.yml

name: Deploy to Dev Metal

on:
  push:
    # --- FIX: Trigger the deployment only on pushes to the 'dev' branch ---
    branches:
      - dev
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/edi-lens-backend:latest-dev
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/edi-lens-backend:latest-dev
          cache-to: type=inline

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/edi-lens-ui:latest-dev
          build-args: |
            VITE_KEYCLOAK_URL=${{ secrets.VITE_KEYCLOAK_URL }}
            VITE_KEYCLOAK_REALM=${{ secrets.VITE_KEYCLOAK_REALM }}
            VITE_KEYCLOAK_CLIENT_ID=${{ secrets.VITE_KEYCLOAK_CLIENT_ID }}
            VITE_API_URL=${{ secrets.VITE_API_URL }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/edi-lens-ui:latest-dev
          cache-to: type=inline

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            set -e
            cd /opt/edi-lens

            # --- THIS IS THE FIX ---
            # Reclaim ownership of all files for the current SSH user
            echo "Ensuring correct file permissions..."
            sudo chown -R $USER:$USER .
            
            echo "Fetching latest changes from origin..."
            git checkout dev
            git fetch origin dev
            
            echo "Resetting local dev branch to match origin/dev..."
            git reset --hard origin/dev
            
            echo "Cleaning up untracked files..."
            git clean -dfx

            echo "Creating/updating the .env file from secrets..."
            echo "${{ secrets.DOT_ENV }}" > .env
            
            echo "Making helper script executable..."
            chmod +x ./scripts/run_app.sh

            echo "Exporting image tags..."
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            export BACKEND_IMAGE_TAG=latest-dev
            export UI_IMAGE_TAG=latest-dev

            echo "Stopping old services (if any)..."
            ./scripts/run_app.sh down

            echo "Starting application stack..."
            ./scripts/run_app.sh up
            
            echo "Cleaning up old Docker images..."
            docker image prune -af